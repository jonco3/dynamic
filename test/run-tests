#!/bin/env python

import os
import re
import subprocess
import sys

args = sys.argv[1:]
testDirs = []
while args and os.path.isdir(args[0]):
    testDirs.append(args.pop(0))

command = args

if not testDirs or not command:
    sys.exit("usage: run-tests TEST_DIRS... COMMAND...")

testDir = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'tests')
benchDir = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'tests')

runCount = 0
passCount = 0

def runTest(dirname, name):
    global runCount, passCount
    runCount += 1
    filename = os.path.join(dirname, name)

    with open(filename) as f:
        line = f.readline().rstrip()
    match = re.match('# (\w+): (.*)$', line)
    if not match:
        return 'BAD'
    if match.group(1) != 'output':
        return 'BAD'
    expect = match.group(2)

    try:
        ok = True
        output = subprocess.check_output(command + [filename],
                                         stderr = subprocess.STDOUT)
    except subprocess.CalledProcessError as e:
        ok = False
        output = e.output

    if not ok:
        return 'FAIL'
    if output.rstrip() != expect:
        return 'FAIL'

    passCount += 1
    return 'PASS'

def runTestDir(arg, dirname, names):
    print(dirname)
    for name in names:
        if name.endswith('.py'):
            result = runTest(dirname, name)
            if result != 'PASS':
                result = '     ' + result
            print('  %-20s %s' % (name, result))

print("Running tests...")
for testDir in testDirs:
    os.path.walk(testDir, runTestDir, None)
print("%d tests passed out of %d" % (passCount, runCount))
if passCount != runCount:
    sys.exit(1)
